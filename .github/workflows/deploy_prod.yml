name: Deploy Prod

on:
  push:
    branches:
      - master
      - release-*
  pull_request: {}
  workflow_dispatch: {}

env:
  # Common versions
  GO_VERSION: '1.17'
  GOLANGCI_VERSION: 'v1.43.0'
  DOCKER_BUILDX_VERSION: 'v0.4.2'
  ECR: 081239602556.dkr.ecr.eu-central-1.amazonaws.com/grabberofficial-provider-helm
  ROLE: "arn:aws:iam::081239602556:role/github-ecr-grabberofficial-provider-helm"

jobs:
  publish-artifacts:
    runs-on: ubuntu-18.04
    permissions:
      id-token: write # required to use OIDC authentication
      contents: read # required to checkout the code from the repo
    steps:
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: ${{ env.DOCKER_BUILDX_VERSION }}
          install: true

      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Expose git commit data
        uses: rlespinasse/git-commit-data-action@v1

      - name: Fetch History
        run: git fetch --prune --unshallow

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Find the Go Build Cache
        id: go
        run: echo "::set-output name=cache::$(go env GOCACHE)"

      - name: Cache the Go Build Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.go.outputs.cache }}
          key: ${{ runner.os }}-build-publish-artifacts-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-build-publish-artifacts-

      - name: Cache Go Dependencies
        uses: actions/cache@v2
        with:
          path: .work/pkg
          key: ${{ runner.os }}-pkg-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-pkg-

      - name: Vendor Dependencies
        run: make vendor vendor.check

      - name: Build Artifacts
        run: make -j2 build.all
        env:
          # We're using docker buildx, which doesn't actually load the images it
          # builds by default. Specifying --load does so.
          BUILD_ARGS: "--load"

      - name: Get images
        run: |
          docker image ls
          export PROVIDER_IMAGE=$(docker image ls | grep provider-helm-amd64 | awk '{print $1}')
          echo "PROVIDER_IMAGE=${PROVIDER_IMAGE}" >> $GITHUB_ENV

      - name: Set env
        run: |
          echo "TAG=${ECR}:${{ env.GIT_COMMIT_SHORT_SHA }}" >> $GITHUB_ENV

      - name: Change tag
        run: |
          docker tag "${PROVIDER_IMAGE}:latest" "${TAG}"

      - name: Push to ECR and Argo
        uses: ./.github/actions/argo-push
        with:
          aws-role: ${{ env.ROLE }}
          aws-ecr-uri: ${{ env.ECR }}
          ssh-key: ${{ secrets.ARGOCD_REPO_SSH }}
          environment: prod
          project: crossplane_helm_provider
          image: ${{ env.TAG }}

